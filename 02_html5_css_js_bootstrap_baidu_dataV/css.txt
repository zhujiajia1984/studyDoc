
MarkMan工具（csdn下载破解版）：
----------------------------------------------------------------------------------------------------
盒模型：
1：什么是盒模型：盒子模型：任何区域都是一个盒子（矩形）。网页是多个盒子嵌套的结果。
2：div包含：border：边框 content：内容（width,height）  内边距（padding）：边框和内容之间的距离 外边距（margin）：和其他div之间距离。
3：内边距被内容穿透：给内容设置背景色或背景图片时，内边距也被影响。边框也会被影响（有浏览器兼容性）
4：Doctype：会影响盒模型：h5就是标准的盒模型。确认是html5标准。
5：边框定义：如果定义了，则边框出现在内边距和外边距之间。
6：边框设置：http://www.w3school.com.cn/css/css_border.asp
   设置样式、宽度和颜色。样式是边框最重要的一个方面，这不是因为样式控制着边框的显示（当然，样式确实控制着   边框的显示），而是因为如果没有样式，将根本没有边框。
   边框合写：border-left: 宽度 样式 颜色
   去除边框：border:0 none：兼容性最好写法
   透明色：transparent：没有颜色，使用背景色
7：内边距（padding）：盒子和内容之间的距离。（上右下左的顺序设置）
8：外边距（margin）：盒子和其他盒子之间的距离
   外边距负值：使相邻元素重叠
   1：块级元素水平居中：设置元素宽度，并将左右外边距都设置为auto时，会将块级元素水平居中。margin: 0 auto
      
   
   




----------------------------------------------------------------------------------------------------
CSS显示模式（display）：
1：行内标签：和其他标签共用一行。例如span等标签。不能设置宽和高。只能通过内容撑开宽和高。只有左右边距。
2：块级标签：独占一行。例如：div，p等。可以设置宽高，有上下左右边距。
3：改变显示模式：display: none/inline/block
   <div style="display:inline">：把div改为行内标签
   <span style="display:block">：把span改为块级标签
4：隐藏标签：none：隐藏标签
5：行内块标签：inline-block，可以设置高度（对比行内元素）。可以设置宽和高。只有左右边距。

----------------------------------------------------------------------------------------------------
CSS长度单位：
px：像素点
em：1 em相当于当前字体大小。例如当前字体大小为16px，则1em=16px（手机端）



----------------------------------------------------------------------------------------------------


CSS 2.1：可以兼容ie6、7、8
CSS 3：  ie9以上的兼容性好，以下的兼容性不好。
----------------------------------------------------------------------------------------------------
Emmate语法（快速生成）：
ul>li>a + tab
ul>(li>a)*3 + tab
ul>(li>a[href="#"])*3 + tab
>：为下级关系
[]：内为属性
*3：3行

----------------------------------------------------------------------------------------------------
CSS样式类型：
1：默认样式：所有标签都有默认的样式（称为浏览器样式/默认样式，优先级最低）
2：行内样式：通过标签内的style属性来设置样式。例：<h1 style="color: red; font-size: 12px">主题h1</h1>
3：内嵌样式：在head标签中嵌入style样式
 <style type="text/css"> p{color:red;}</style>
4：外联样式（推荐使用）：通过link标签引入外部css。在head内部使用link标签，并引用此标签
   例：<link rel="stylesheet" href="stylesheets/style.css">
       a {color:red}
5：导入样式：import，必须写在所有其他样式之前。 @import url(css/b.css)
   可以在内联中导入，也可以在单独CSS文件中导入

----------------------------------------------------------------------------------------------------
CSS选择器：
1：通配符选择器：设置当前页面的所有标签样式。优先级高于继承的样式
   例如：* {color:red}
2：标签选择器：所有标签都被选择。p{color:red}  
3：id选择器：选择指定标签设置。#id{color:red} 
   id命名规范：只能是字母或者下划线或者数字。只允许以字母开头。不能用标签名。全局唯一。
4：类选择器：针对一类标签设置。class="web"  .web{color:red}
   一个标签可以有多个类。class="web demo" 同时有两个类选择器
5：复合选择器：多个选择器组合成为复合选择器。参考：http://www.w3school.com.cn/cssref/css_selectors.asp
   h1.myclass：选择h1标签中class为myclass的元素
   h2#myid：  选择h2标签中id为myid的元素
   .box li：  用空格隔开，选择class为box下的所有li标签
   .myclass, h3：用逗号隔开，则并集选择器
   h1>img：   用大于号隔开，表示为选择直属子级（孙子级不选择）
   h1[name=abc]：用[]隔开，选择h1并且name属性为abc的标签
6：伪类选择器（状态）：
   :link：选择所有未被访问过的链接并设置样式，一般用a标签替代。
   :hover：选择当前鼠标指针悬停的元素。（常用）
   :active：选择当前被激活的元素，例如：链接被点击，按钮被点击等。
   :fucus：选择获得输入焦点的元素。
   :visited：选择被访问过的链接
7：伪元素选择器（内容）
   :before/:after（常用）：选择每个指定元素之前/之后插入内容.content:""：可以设置内容，并为其设置CSS样式
   :first-line：第一行
8：多类选择器：.a.b{..}，class必须同时包含a和b才能匹配，否则不匹配
   .a, .b{...}：多元素选择器：多个类共用同一个样式

----------------------------------------------------------------------------------------------------
简单样式：
width：设置宽度，单位px
height：设置高度，单位px
color：前景色，文字颜色：预定义：red,green等。十六进制：#FF0000、RGB代码rgb（0,0,0）
background-color：背景色
font-size：字体大小，单位px。一般页面内容12px 14px
font-family：字体：微软雅黑。可以同时指定多个字体，如果不支持则使用下一个，最后一个一般用系统自带
字体用英文或者unicode编码（建议），能够兼容所有浏览器。
font-weight：字体的粗细，400：normal 700：加粗。不需要单位。100-900，100的整数倍。
font: 200 12px "黑体"
&nbsp：加入空格
line-height:行高（常用）：文本的顶部+文本的底部 + 一倍行距 = 行高。和CSS定义相同。实现效果：垂直居中。
设置为标签的高度即可垂直居中。
例如：行高100px，文字20px，则行距自动平均分配为两个40px，文字居中。
例如：font:12px/1.5em = 12px/1.5 = 12px/150% = 12px/20px：字体12px，行高为1.5倍字体大小。
text-align：文本水平对齐方式


----------------------------------------------------------------------------------------------------
CSS层叠性（相同属性覆盖方案）：
1：相同优先级的CSS样式，最后设置的将会覆盖之前的。

----------------------------------------------------------------------------------------------------
CSS继承性：
1：父标签的样式，子标签会继承。（优先级只大于标签默认的样式，低于其他所有样式）
2：不是所有的样式都能继承，只有所有文字相关的可以继承。例如：color系列、text系列、font系列、line系列等
3：盒模型相关的不能继承：边框、外边距、内边距、背景、定位、元素高和宽等
4：在body中对文字相关的进行整体设置

----------------------------------------------------------------------------------------------------
CSS优先级：
1：行内样式(标签内style) > ID选择器（#） > 类选择器（.） > 标签选择器（div）> 通配符样式（*） > 继承的样式 > 标签默认的样式
2：权重比较：0 0 1 2

----------------------------------------------------------------------------------------------------
通用样式属性：
1：style属性：所有标签都有的属性。可以设置多条CSS属性，例如：color、font-size等。
2：id属性：所有标签都有的属性，用于本地js调用。
3：name属性：所有标签都有的属性，用于服务器js调用。
4：min-height:最小高度，只能高于，不能小于
5：clear：指定浮动元素
6：z-index：显示优先级（默认0，越高越显示在前面，必须是绝对定位）：Z-index 仅能在定位元素上奏效

----------------------------------------------------------------------------------------------------
我们先来看看CSS3 Api中对position属性的相关定义：

static：无特殊定位，对象遵循正常文档流。top，right，bottom，left等属性不会被应用。
 relative：对象遵循正常文档流，但将依据top，right，bottom，left等属性在正常文档流中偏移位置。而其层叠通过z-index属性定义。
 absolute：对象脱离正常文档流，使用top，right，bottom，left等属性进行绝对定位。而其层叠通过z-index属性定义。
 fixed：对象脱离正常文档流，使用top，right，bottom，left等属性以窗口为参考点进行定位，当出现滚动条时，对象不会随着滚动。而其层叠通过z-index属性定义。
什么是文档流？

      将窗体自上而下分成一行行, 并在每行中按从左至右的顺序排放元素,即为文档流。

      只有三种情况会使得元素脱离文档流，分别是：浮动、绝对定位和相对定位。

静态定位(static) ：

      static，无特殊定位，它是html元素默认的定位方式，即我们不设定元素的position属性时默认的position值就是static，它遵循正常的文档流对象，对象占用文档空间，该定位方式下，top、right、bottom、left、z-index等属性是无效的。display:inline


